--- a/luaotfload/luaotfload-database.lua
+++ b/luaotfload/luaotfload-database.lua
@@ -2331,8 +2331,7 @@ local path_separator = os.type == "windows" and ";" or ":"
@@ -2323,6 +2323,8 @@
             logreport ("both", 3, "db",
                        "Path %q matches $PWD (%q), skipping.",
                        dir, pwd)
+            -- we should also look for local files
+            config.luaotfload.db.scan_local = true
         else
             result[#result+1] = dir
         end
@@ -2335,8 +2337,7 @@
 --[[doc--
 
     collect_font_filenames_texmf -- Scan texmf tree for font files
-    relying on the kpathsea variables $OPENTYPEFONTS and $TTFONTS of
-    texmf.cnf.
+    relying on kpathsea search paths for the respective file types.
     The current working directory comes as “.” (texlive) or absolute
     path (miktex) and will always be filtered out.
 
@@ -2362,16 +2363,19 @@
         end
     end
 
-    fontdirs = kpseexpand_path "$OPENTYPEFONTS"
-    fontdirs = fontdirs .. path_separator .. kpseexpand_path "$TTFONTS"
-    fontdirs = fontdirs .. path_separator .. kpseexpand_path "$T1FONTS"
-    fontdirs = fontdirs .. path_separator .. kpseexpand_path "$AFMFONTS"
+    local kpseshow_expanded_path = function (file_type) return kpse.expand_path (kpse.show_path (file_type)) end
 
-    if stringis_empty (fontdirs) then
+    fontdirs = kpseshow_expanded_path "opentype fonts"
+    fontdirs = fontdirs .. path_separator .. kpseshow_expanded_path "truetype fonts"
+    fontdirs = fontdirs .. path_separator .. kpseshow_expanded_path "type1 fonts"
+    fontdirs = fontdirs .. path_separator .. kpseshow_expanded_path "afm"
+
+    fontdirs  = filesplitpath (fontdirs)
+    if not fontdirs then
         return { }
     end
 
-    local tasks = filter_out_pwd (filesplitpath (fontdirs))
+    local tasks = filter_out_pwd (fontdirs)
     logreport ("both", 3, "db",
                "Initiating scan of %d directories.", #tasks)
 
--- a/luaotfload/luaotfload-parsers.lua
+++ b/luaotfload/luaotfload-parsers.lua
@@ -288,14 +288,9 @@
       if stringsub(path, 1, 1) == "~" then
         path = filejoin(home, stringsub(path, 2))
       end
-      --- We exclude paths with texmf in them, as they should be
-      --- found anyway; also duplicates are ignored by checking
-      --- if they are elements of dirs_done.
-      ---
-      --- FIXME does this mean we cannot access paths from
-      --- distributions (e.g. Context minimals) installed
-      --- separately?
-      if not (stringfind(path, "texmf") or dirs_done[path]) then
+      --- Duplicate paths are ignored by checking if they are
+      --- elements of dirs_done.
+      if not dirs_done[path] then
         logreport ("log", 5, "db",
                    "New fontconfig path at %s.",
                    path)
